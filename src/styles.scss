/* #region Sass variables */
$colors-tint: 'red',
'green',
'blue',
'yellow';
$colors-light: 'white',
'gray',
'dark';
/* #endregion Sass variables */

/* #region CSS style resets */
@import '~normalize.css';
/* #endregion CSS style resets */

/* #region Font loading */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600&display=swap');
/* #endregion Font loading */

/* #region HTML element styles */
html,
body {
  height: 100%;
}

body {
  //palette
  --white: #fff;

  --gray: #6c6c6c;
  --gray-1: hsla(225, 16%, 21%, 1);

  --red: #D9435F;
  --blue: #5E66F2;
  --yellow: #F2CB07;
  --green: #49bf8a;
  --dark: #06080D;

  //spacing
  --s-xl: 1.5rem;
  --s-l: 1.4rem;
  --s-m: 1rem;
  --s-s: .8rem;
  --s-xs: .2rem;

  font-size: 16px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  min-height: 100vh;
  min-width: 30rem;
  font-family: 'Montserrat', sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  color: var(--white);
  background-color: var(--dark);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:focus {
  outline: none;
}

h1 {
  @extend .txt--xxl;
}

h2 {
  @extend .txt--xl;
}

h3 {
  @extend .txt--l;
}

h4 {
  @extend .txt--m;
}

a {
  text-decoration: inherit;
  color: inherit;
  cursor: pointer;

  &:hover {
    opacity: .8;
  }
}

input[type="text"],
input[type="number"] {
  @extend .border-radius--m;
  padding: var(--s-s);
  background-color: var(--dark);
  border: 2px solid var(--blue);
  width: 100%;

  &,
  &::placeholder {
    color: var(--white);
    opacity: 1;
  }
}

/* #endregion HTML element styles */

/* #region Quick styling */

.txt {

  // txt sizes
  &--xxxl {
    font-size: 5em;
  }

  &--xxl {
    font-size: 3em;
  }

  &--xl {
    font-size: 2em;
  }

  &--l {
    font-size: 1.5em;
  }

  &--m {
    font-size: 1.17em;
  }

  &--s {
    font-size: .875em;
  }

  &--xs {
    font-size: .75em;
  }

  // txt colors
  &--contrast {
    color: var(--yellow);

    @each $color in $colors-tint {
      &--#{$color} {
        color: var(#{$color});
      }
    }
  }

  // txt utils
  &--bold {
    font-weight: bold;
  }

  &--regular {
    font-weight: 400;
  }

  &--light {
    font-weight: 200;
  }

  &--italic {
    font-style: italic;
  }

  &--center {
    text-align: center;
  }

  &--right {
    text-align: right;
  }

  &--left {
    text-align: left;
  }

  @for $i from 1 through 5 {
    &--clip--#{$i} {
      display: -webkit-box;
      -webkit-line-clamp: #{$i};
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  }
}

.border-radius {
  border-radius: 50%;

  &--s {
    border-radius: .2rem;
  }

  &--m {
    border-radius: .5rem;
  }

  &--l {
    border-radius: 1rem;
  }
}

.margin-auto {
  &--right {
    margin-right: auto;
  }

  &--left {
    margin-left: auto;
  }
}

.gutter {
  &--horizontal {
    >* {
      margin-right: var(--s-m);
    }

    >:first-child {
      margin-left: var(--s-m);
    }
  }

  &--vertical {
    >*:not(:last-child) {
      margin-bottom: var(--s-m);
    }
  }

  &--all {
    @extend .gutter--vertical;
    margin-left: var(--s-m);
    margin-right: var(--s-m);
  }
}

.contain {
  max-width: 80rem;
  margin: auto;
}

/* #endregion Quick styling */

/* #region Hard classes */

.divisor {
  height: 1px;
  width: 100%;
  background-color: var(--white);
}

.card {
  padding: var(--s-xl);
}

.badge {
  @extend .txt--s,
  .border-radius--m;
  display: inline-block;
  color: var(--white);
  padding: var(--s-xs);
  background-color: var(--blue);
  border: 2px solid var(--blue);

  margin: var(--s-xs);
  cursor: pointer;
  min-height: 0;

  &.inactive {
    background-color: unset;
  }

  @each $color in $colors-tint {
    &--#{$color} {
      background-color: var(#{$color});
      border-color: var(#{$color});
    }
  }
}

/* #endregion Hard classes */
