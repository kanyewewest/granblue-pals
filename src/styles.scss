/* #region Sass variables */
@use './styles/_sass-variables'as v;
/* #endregion Sass variables */

/* #endregion Load utilities modules */

@use './styles/_reset';
@use './styles/_quick-styling';

/* #endregion Load utilities modules */

/* #region Font loading */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600&display=swap');
/* #endregion Font loading */

/* #region HTML element styles */
html,
body {
  height: 100%;
}

body {
  //palette
  --white: #fff;

  --gray: #6c6c6c;
  --gray-1: hsla(225, 16%, 21%, 1);
  --gray-2: #79819a;

  --red: #D9435F;
  --blue: #5E66F2;
  --yellow: #F2CB07;
  --green: #49bf8a;
  --dark: #06080D;

  //spacing
  --s-xl: 1.5rem;
  --s-l: 1.4rem;
  --s-m: 1rem;
  --s-s: .8rem;
  --s-xs: .2rem;

  font-size: 16px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  min-height: 100vh;
  min-width: 30rem;
  font-family: 'Montserrat', sans-serif;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  color: var(--white);
  background-color: var(--dark);
}

a:hover {
  opacity: .8;
}

h1 {
  @extend .txt--xxl;
}

h2 {
  @extend .txt--xl;
}

h3 {
  @extend .txt--l;
}

h4 {
  @extend .txt--m;
}

input[type="text"],
input[type="number"],
.searchbar {
  @extend .border-radius--m;
  padding: var(--s-s);
  background-color: inherit;
  border: 2px solid var(--blue);
  flex-grow: 1;

  &,
  &::placeholder {
    color: var(--white);
    opacity: 1;
  }
}


input[type="checkbox"] {
  display: none;

  &:checked+label:after {
    opacity: 1;
    transition: opacity .2s ease-in;
  }

  &+label {
    @extend .border-radius--m;
    border: 2px solid var(--blue);
    display: block;
    width: 2rem;
    height: 2rem;
    position: relative;

    &:after {
      @extend .border-radius--s;
      content: "";
      position: absolute;
      background-color: var(--blue);
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      width: 1rem;
      height: 1rem;
      margin: auto;
      opacity: 0;

    }
  }
}

/* #endregion HTML element styles */

/* #region Blocks */

.divisor {
  height: 1px;
  width: 100%;
  background-color: var(--white);
}

.card {
  @extend .border-radius--m;
  padding: var(--s-xl);
}

.badge {
  @extend .txt--s,
  .border-radius--m;
  display: inline-block;
  color: var(--white);
  font-weight: normal;
  padding: var(--s-xs);
  background-color: var(--blue);
  border: 2px solid var(--blue);

  margin: var(--s-xs);
  cursor: pointer;
  min-height: 0;

  &.inactive {
    background-color: unset;
    border-style: dashed;
  }

  @each $color in v.$colors-tint {
    &--#{$color} {
      background-color: var(--#{$color});
      border-color: var(--#{$color});
    }
  }
}

.form {
  @extend .gutter--vertical;

  &__group {
    display: flex;
    flex-flow: column;

    &--row-wrap {
      @extend .gutter--horizontal;
      flex-flow: row wrap;
      // Force .gutter--vertical for all childs instead of parent
      // TODO: Find a way to have similar interaction
      // without this (too hacky) and doesn't work well with
      // .form__group--row-wrap as last element of a form
      // as it forces a margin on it
      margin-bottom: 0 !important;

      &:not(:last-child)>* {
        margin-bottom: var(--s-m) !important;
      }
    }

    &--row-nowrap {
      @extend .gutter--horizontal;
      flex-flow: row nowrap;
    }

    &:not(.form__group--row-nowrap):not(.form__group--row-wrap) {
      @extend .gutter--vertical;
    }
  }
}

.searchbar {
  display: flex;
  flex-flow: row nowrap;
  padding: 0;

  input {
    padding: 0;
    border: none;
  }
}

.btn {
  cursor: pointer;
  padding: var(--s-s);
}

/* #endregion Blocks */
